generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model banner {
  ma_banner Int     @id @default(autoincrement())
  ma_phim   Int
  hinh_anh  String? @db.VarChar(255)
  phim      phim    @relation(fields: [ma_phim], references: [ma_phim], onDelete: Cascade, onUpdate: NoAction, map: "banner_ibfk_1")

  @@index([ma_phim], map: "ma_phim")
}

model cum_rap {
  ma_cum_rap      Int          @id @default(autoincrement())
  ten_cum_rap     String       @db.VarChar(255)
  dia_chi         String       @db.VarChar(255)
  ma_he_thong_rap Int
  he_thong_rap    he_thong_rap @relation(fields: [ma_he_thong_rap], references: [ma_he_thong_rap], onDelete: Cascade, onUpdate: NoAction, map: "cum_rap_ibfk_1")
  rap_phim        rap_phim[]

  @@index([ma_he_thong_rap], map: "ma_he_thong_rap")
}

model dat_ve {
  user_id       Int
  ma_lich_chieu Int
  ma_ghe        Int
  users         users      @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "dat_ve_ibfk_1")
  lich_chieu    lich_chieu @relation(fields: [ma_lich_chieu], references: [ma_lich_chieu], onDelete: Cascade, onUpdate: NoAction, map: "dat_ve_ibfk_2")
  ghe           ghe        @relation(fields: [ma_ghe], references: [ma_ghe], onDelete: Cascade, onUpdate: NoAction, map: "dat_ve_ibfk_3")

  @@id([user_id, ma_lich_chieu, ma_ghe])
  @@index([ma_ghe], map: "ma_ghe")
  @@index([ma_lich_chieu], map: "ma_lich_chieu")
}

model ghe {
  ma_ghe   Int      @id @default(autoincrement())
  loai_ghe String   @db.VarChar(50)
  ma_rap   Int
  dat_ve   dat_ve[]
  rap_phim rap_phim @relation(fields: [ma_rap], references: [ma_rap], onDelete: Cascade, onUpdate: NoAction, map: "ghe_ibfk_1")

  @@index([ma_rap], map: "ma_rap")
}

model he_thong_rap {
  ma_he_thong_rap  Int       @id @default(autoincrement())
  ten_he_thong_rap String    @db.VarChar(255)
  logo             String?   @db.VarChar(255)
  cum_rap          cum_rap[]
}

model lich_chieu {
  ma_lich_chieu  Int       @id @default(autoincrement())
  ma_rap         Int
  ma_phim        Int
  ngay_gio_chieu DateTime? @db.DateTime(0)
  gia_ve         Int
  dat_ve         dat_ve[]
  rap_phim       rap_phim  @relation(fields: [ma_rap], references: [ma_rap], onDelete: Cascade, onUpdate: NoAction, map: "lich_chieu_ibfk_1")
  phim           phim      @relation(fields: [ma_phim], references: [ma_phim], onDelete: Cascade, onUpdate: NoAction, map: "lich_chieu_ibfk_2")

  @@index([ma_phim], map: "ma_phim")
  @@index([ma_rap], map: "ma_rap")
}

model permissions {
  permission_id    Int                @id @default(autoincrement())
  endpoint         String             @db.VarChar(255)
  method           String             @db.VarChar(255)
  module           String             @db.VarChar(255)
  created_at       DateTime?          @default(now()) @db.DateTime(0)
  updated_at       DateTime?          @default(now()) @db.DateTime(0)
  role_permissions role_permissions[]
}

model phim {
  ma_phim         Int          @id @default(autoincrement())
  ten_phim        String       @db.VarChar(255)
  trailer         String?      @db.VarChar(255)
  hinh_anh        String?      @db.VarChar(255)
  mo_ta           String?      @db.Text
  ngay_khoi_chieu DateTime?    @db.Date
  danh_gia        Int?
  hot             Boolean?     @default(false)
  dang_chieu      Boolean?     @default(false)
  sap_chieu       Boolean?     @default(false)
  banner          banner[]
  lich_chieu      lich_chieu[]
}

model rap_phim {
  ma_rap     Int          @id @default(autoincrement())
  ten_rap    String       @db.VarChar(255)
  ma_cum_rap Int
  ghe        ghe[]
  lich_chieu lich_chieu[]
  cum_rap    cum_rap      @relation(fields: [ma_cum_rap], references: [ma_cum_rap], onDelete: Cascade, onUpdate: NoAction, map: "rap_phim_ibfk_1")

  @@index([ma_cum_rap], map: "ma_cum_rap")
}

model role_permissions {
  role_permissions_id Int          @id @default(autoincrement())
  role_id             Int?
  permission_id       Int?
  is_active           Boolean?     @default(true)
  created_at          DateTime?    @default(now()) @db.DateTime(0)
  updated_at          DateTime?    @default(now()) @db.DateTime(0)
  roles               roles?       @relation(fields: [role_id], references: [role_id], onDelete: Cascade, onUpdate: NoAction, map: "role_permissions_ibfk_1")
  permissions         permissions? @relation(fields: [permission_id], references: [permission_id], onDelete: Cascade, onUpdate: NoAction, map: "role_permissions_ibfk_2")

  @@index([permission_id], map: "permission_id")
  @@index([role_id], map: "role_id")
}

model roles {
  role_id          Int                @id @default(autoincrement())
  name             String             @unique(map: "name") @db.VarChar(255)
  description      String?            @db.VarChar(255)
  is_active        Boolean?           @default(true)
  created_at       DateTime?          @default(now()) @db.DateTime(0)
  updated_at       DateTime?          @default(now()) @db.DateTime(0)
  role_permissions role_permissions[]
  users            users[]
}

model users {
  user_id     Int       @id @default(autoincrement())
  email       String    @unique(map: "email") @db.VarChar(255)
  pass_word   String    @db.VarChar(255)
  full_name   String    @db.VarChar(255)
  avatar      String?   @db.VarChar(255)
  google_id   String?   @db.VarChar(255)
  face_app_id String?   @db.VarChar(255)
  role_id     Int?      @default(2)
  created_at  DateTime? @default(now()) @db.DateTime(0)
  updated_at  DateTime? @default(now()) @db.DateTime(0)
  dat_ve      dat_ve[]
  roles       roles?    @relation(fields: [role_id], references: [role_id], onDelete: SetDefault, onUpdate: NoAction, map: "users_ibfk_1")

  @@index([role_id], map: "role_id")
}
